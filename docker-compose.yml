version: '2'

networks:
  pk_network:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=30d'
      - '--storage.tsdb.no-lockfile'
      - '--storage.tsdb.min-block-duration=30m'
      - '--storage.tsdb.max-block-duration=1d'
      - '--web.external-url=http://locahost:9090/'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - 9090:9090 
    networks:
      - pk_network
    depends_on:
      - nodeexporter
    labels: 
      org.label-schema.group: "monitoring for pk containers"
  
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - pk_network
    labels:
      org.label-schema.group: "monitoring for pk containers"
    
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor2
    volumes: 
      - /:/roofs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro  
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - pk_network
    labels:
      org.label-schema.group: "monitoring for pk containers"

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - user.config
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:    
      - pk_network
    depends_on:
      - prometheus
    labels:
      org.label-schema.group: "monitoring for pk containers" 
 
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager_pk
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    ports:
      - 9093:9093
    networks:
      - pk_network
    labels:
      org.label-schema.group: "monitoring for PK containers"
